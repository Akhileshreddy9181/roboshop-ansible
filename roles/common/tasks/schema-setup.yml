
- name: MongoDB schema
  when: schema_type =="mongo"
  block:
    - name: SetUp MongoDB repo file
      ansible.builtin.copy:
        src: mongodb.repo
        dest: /etc/yum.repos.d/mongodb.repo

    - name: Install Mongo Client
      ansible.builtin.yum:
        name: mongodb-org-shell
        state: installed

    - name: Download MongoDB PEM File
      ansible.builtin.get_url:
        url: https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem
        dest: /app/rds-combined-ca-bundle.pem

    - name: Load schema
      ansible.builtin.shell: mongo --ssl --host {{ lookup('amazon.aws.aws_ssm', '{{env}}.docdb.endpoint', region='us-east-1') }}:27017 --sslCAFile /app/rds-combined-ca-bundle.pem --username {{ lookup('amazon.aws.aws_ssm', '{{env}}.docdb.user', region='us-east-1') }} --password {{ lookup('amazon.aws.aws_ssm', '{{env}}.docdb.pass', region='us-east-1') }} </app/schema/{{component}}.js

- name: MySQL schema
  when: schema_type =="mysql"
  block:
    - name: Install MySQL Client
      ansible.builtin.yum:
        name: mysql
        state: installed

    - name: Check Schema
      ansible.builtin.shell: echo 'show databases' | mysql -h {{ lookup('amazon.aws.aws_ssm', '{{env}}.rds.endpoint', region='us-east-1') }} -u{{ lookup('amazon.aws.aws_ssm', '{{env}}.rds.user', region='us-east-1') }} -p{{ lookup('amazon.aws.aws_ssm', '{{env}}.rds.pass', region='us-east-1') }} | grep cities
      register: schema_status
      ignore_errors: true

    - name: Load schema
      ansible.builtin.shell: mysql -h {{ lookup('amazon.aws.aws_ssm', '{{env}}.rds.endpoint', region='us-east-1') }} -u{{ lookup('amazon.aws.aws_ssm', '{{env}}.rds.user', region='us-east-1') }} -p{{ lookup('amazon.aws.aws_ssm', '{{env}}.rds.pass', region='us-east-1') }} < /app/schema/{{component}}.sql
      when: schema_status.rc == 1





